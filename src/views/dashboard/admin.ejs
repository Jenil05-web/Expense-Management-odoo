<!DOCTYPE html>
<html lang="en">

    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Admin Dashboard - Expense Management</title>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
        <style>
            :root {
                --primary-color: #2c3e50;
                --secondary-color: #3498db;
                --success-color: #27ae60;
                --danger-color: #e74c3c;
                --warning-color: #f39c12;
            }

            body {
                background-color: #ecf0f1;
                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            }

            .sidebar {
                min-height: 100vh;
                background: linear-gradient(135deg, var(--primary-color) 0%, #34495e 100%);
                color: white;
                padding: 20px 0;
                position: fixed;
                width: 250px;
                box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1);
            }

            .sidebar .nav-link {
                color: rgba(255, 255, 255, 0.8);
                padding: 12px 25px;
                margin: 5px 10px;
                border-radius: 8px;
                transition: all 0.3s;
            }

            .sidebar .nav-link:hover,
            .sidebar .nav-link.active {
                background-color: rgba(255, 255, 255, 0.1);
                color: white;
            }

            .main-content {
                margin-left: 250px;
                padding: 30px;
            }

            .header {
                background: white;
                padding: 20px 30px;
                border-radius: 10px;
                box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
                margin-bottom: 30px;
            }

            .stat-card {
                background: white;
                border-radius: 10px;
                padding: 25px;
                box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
                transition: transform 0.3s;
            }

            .stat-card:hover {
                transform: translateY(-5px);
            }

            .stat-card .icon {
                font-size: 2.5rem;
                opacity: 0.8;
            }

            .card-custom {
                border: none;
                border-radius: 10px;
                box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
                margin-bottom: 30px;
            }

            .card-custom .card-header {
                background: linear-gradient(135deg, var(--secondary-color) 0%, #2980b9 100%);
                color: white;
                border-radius: 10px 10px 0 0 !important;
                padding: 15px 20px;
                font-weight: 600;
            }

            .table-custom {
                background: white;
            }

            .table-custom thead {
                background-color: #f8f9fa;
            }

            .badge-custom {
                padding: 6px 12px;
                border-radius: 20px;
                font-weight: 500;
            }

            .btn-custom {
                border-radius: 8px;
                padding: 8px 20px;
                font-weight: 500;
                transition: all 0.3s;
            }

            .modal-content {
                border-radius: 15px;
                border: none;
            }

            .modal-header {
                background: linear-gradient(135deg, var(--secondary-color) 0%, #2980b9 100%);
                color: white;
                border-radius: 15px 15px 0 0;
            }

            .form-control:focus,
            .form-select:focus {
                border-color: var(--secondary-color);
                box-shadow: 0 0 0 0.2rem rgba(52, 152, 219, 0.25);
            }

            .approval-rule-item {
                background: #f8f9fa;
                border-radius: 8px;
                padding: 15px;
                margin-bottom: 10px;
                border-left: 4px solid var(--secondary-color);
            }

            .approver-sequence {
                display: flex;
                align-items: center;
                gap: 10px;
                margin-bottom: 10px;
                flex-wrap: wrap;
            }

            .approver-step {
                background: white;
                border: 2px solid var(--secondary-color);
                border-radius: 8px;
                padding: 10px 15px;
                flex: 1;
                min-width: 150px;
            }

            .logo-container {
                text-align: center;
                padding: 20px;
                margin-bottom: 30px;
            }

            .logo-container h3 {
                color: white;
                font-weight: 700;
                margin-bottom: 5px;
            }

            .logo-container small {
                color: rgba(255, 255, 255, 0.8);
            }
        </style>
    </head>

    <body>
        <!-- Sidebar -->
        <div class="sidebar">
            <div class="logo-container">
                <i class="fas fa-receipt fa-3x mb-2"></i>
                <h3>ExpenseFlow</h3>
                <small>Admin Panel</small>
            </div>

            <nav class="nav flex-column">
                <a class="nav-link active" href="#" onclick="showSection('dashboard'); return false;">
                    <i class="fas fa-tachometer-alt me-2"></i> Dashboard
                </a>
                <a class="nav-link" href="#" onclick="showSection('users'); return false;">
                    <i class="fas fa-users me-2"></i> User Management
                </a>
                <a class="nav-link" href="#" onclick="showSection('approval-rules'); return false;">
                    <i class="fas fa-cogs me-2"></i> Approval Rules
                </a>
                <a class="nav-link" href="#" onclick="showSection('expenses'); return false;">
                    <i class="fas fa-file-invoice-dollar me-2"></i> All Expenses
                </a>
                <a class="nav-link" href="#" onclick="showSection('reports'); return false;">
                    <i class="fas fa-chart-bar me-2"></i> Reports
                </a>
                <hr style="border-color: rgba(255,255,255,0.2);">
                <a class="nav-link" href="#" onclick="alert('Logout functionality'); return false;">
                    <i class="fas fa-sign-out-alt me-2"></i> Logout
                </a>
            </nav>
        </div>

        <!-- Main Content -->
        <div class="main-content">
            <!-- Header -->
            <div class="header d-flex justify-content-between align-items-center">
                <div>
                    <h2 class="mb-1">Welcome, Admin</h2>
                    <p class="text-muted mb-0">
                        <i class="fas fa-building me-2"></i>
                        Company Name
                        <span class="badge bg-secondary ms-2">USD</span>
                    </p>
                </div>
                <div>
                    <button class="btn btn-outline-primary btn-custom me-2"
                        onclick="showSection('users'); openModal('addUserModal');">
                        <i class="fas fa-user-plus me-2"></i>Add User
                    </button>
                    <button class="btn btn-primary btn-custom"
                        onclick="showSection('approval-rules'); openModal('addApprovalRuleModal');">
                        <i class="fas fa-plus me-2"></i>New Approval Rule
                    </button>
                </div>
            </div>

            <!-- Dashboard Section -->
            <div id="dashboard" class="section">
                <!-- Stats Cards -->
                <div class="row mb-4">
                    <div class="col-md-3">
                        <div class="stat-card">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <p class="text-muted mb-1">Total Employees</p>
                                    <h3 class="mb-0">24</h3>
                                </div>
                                <div class="icon text-primary">
                                    <i class="fas fa-users"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stat-card">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <p class="text-muted mb-1">Pending Approvals</p>
                                    <h3 class="mb-0">8</h3>
                                </div>
                                <div class="icon text-warning">
                                    <i class="fas fa-clock"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stat-card">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <p class="text-muted mb-1">Total Expenses</p>
                                    <h3 class="mb-0">$45,320</h3>
                                </div>
                                <div class="icon text-success">
                                    <i class="fas fa-money-bill-wave"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stat-card">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <p class="text-muted mb-1">This Month</p>
                                    <h3 class="mb-0">$12,850</h3>
                                </div>
                                <div class="icon text-info">
                                    <i class="fas fa-calendar-alt"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Recent Activity -->
                <div class="card card-custom">
                    <div class="card-header">
                        <i class="fas fa-history me-2"></i>Recent Activity
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-custom table-hover">
                                <thead>
                                    <tr>
                                        <th>Date</th>
                                        <th>Employee</th>
                                        <th>Description</th>
                                        <th>Amount</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="recentExpensesTable">
                                    <tr>
                                        <td colspan="6" class="text-center text-muted">Loading...</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <!-- User Management Section -->
            <div id="users" class="section" style="display: none;">
                <div class="card card-custom">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <span><i class="fas fa-users me-2"></i>User Management</span>
                        <button class="btn btn-light btn-sm" onclick="openModal('addUserModal')">
                            <i class="fas fa-plus me-1"></i>Add User
                        </button>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-custom table-hover">
                                <thead>
                                    <tr>
                                        <th>Name</th>
                                        <th>Email</th>
                                        <th>Role</th>
                                        <th>Manager</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="usersTable">
                                    <tr>
                                        <td colspan="6" class="text-center text-muted">Loading...</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Approval Rules Section -->
            <div id="approval-rules" class="section" style="display: none;">
                <div class="card card-custom">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <span><i class="fas fa-cogs me-2"></i>Approval Rules Configuration</span>
                        <button class="btn btn-light btn-sm" onclick="openModal('addApprovalRuleModal')">
                            <i class="fas fa-plus me-1"></i>Add Rule
                        </button>
                    </div>
                    <div class="card-body">
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle me-2"></i>
                            Configure approval workflows for different expense scenarios.
                        </div>
                        <div id="approvalRulesContainer">
                            <div class="text-center text-muted py-5">
                                <i class="fas fa-cogs fa-3x mb-3" style="opacity: 0.3;"></i>
                                <p>Loading approval rules...</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- All Expenses Section -->
            <div id="expenses" class="section" style="display: none;">
                <div class="card card-custom">
                    <div class="card-header">
                        <i class="fas fa-file-invoice-dollar me-2"></i>All Expenses
                    </div>
                    <div class="card-body">
                        <div class="row mb-3">
                            <div class="col-md-3">
                                <select class="form-select" id="statusFilter" onchange="filterExpenses()">
                                    <option value="">All Status</option>
                                    <option value="pending">Pending</option>
                                    <option value="approved">Approved</option>
                                    <option value="rejected">Rejected</option>
                                </select>
                            </div>
                            <div class="col-md-3">
                                <select class="form-select" id="categoryFilter" onchange="filterExpenses()">
                                    <option value="">All Categories</option>
                                    <option value="food">Food</option>
                                    <option value="travel">Travel</option>
                                    <option value="accommodation">Accommodation</option>
                                    <option value="supplies">Supplies</option>
                                    <option value="other">Other</option>
                                </select>
                            </div>
                            <div class="col-md-6">
                                <input type="text" class="form-control" id="searchExpense" placeholder="Search..."
                                    onkeyup="filterExpenses()">
                            </div>
                        </div>

                        <div class="table-responsive">
                            <table class="table table-custom table-hover">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Date</th>
                                        <th>Employee</th>
                                        <th>Category</th>
                                        <th>Description</th>
                                        <th>Amount</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="expensesTableBody">
                                    <tr>
                                        <td colspan="8" class="text-center text-muted">Loading...</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Reports Section -->
            <div id="reports" class="section" style="display: none;">
                <div class="row">
                    <div class="col-md-6">
                        <div class="card card-custom">
                            <div class="card-header">
                                <i class="fas fa-chart-pie me-2"></i>Expenses by Category
                            </div>
                            <div class="card-body">
                                <canvas id="categoryChart"></canvas>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="card card-custom">
                            <div class="card-header">
                                <i class="fas fa-chart-line me-2"></i>Monthly Trend
                            </div>
                            <div class="card-body">
                                <canvas id="trendChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="card card-custom mt-4">
                    <div class="card-header">
                        <i class="fas fa-file-export me-2"></i>Export Reports
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <label class="form-label">Date Range</label>
                                <div class="input-group mb-3">
                                    <input type="date" class="form-control" id="exportStartDate">
                                    <span class="input-group-text">to</span>
                                    <input type="date" class="form-control" id="exportEndDate">
                                </div>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Format</label>
                                <div class="d-flex gap-2">
                                    <button class="btn btn-outline-success btn-custom" onclick="exportReport('excel')">
                                        <i class="fas fa-file-excel me-2"></i>Excel
                                    </button>
                                    <button class="btn btn-outline-danger btn-custom" onclick="exportReport('pdf')">
                                        <i class="fas fa-file-pdf me-2"></i>PDF
                                    </button>
                                    <button class="btn btn-outline-primary btn-custom" onclick="exportReport('csv')">
                                        <i class="fas fa-file-csv me-2"></i>CSV
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Add User Modal -->
        <div class="modal fade" id="addUserModal" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title"><i class="fas fa-user-plus me-2"></i>Add New User</h5>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                    </div>
                    <form id="addUserForm" onsubmit="submitAddUser(event)">
                        <div class="modal-body">
                            <div class="mb-3">
                                <label class="form-label">Name</label>
                                <input type="text" class="form-control" name="name" required>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Email</label>
                                <input type="email" class="form-control" name="email" required>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Password</label>
                                <input type="password" class="form-control" name="password" required minlength="6">
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Role</label>
                                <select class="form-select" name="role" id="userRole" onchange="toggleManagerField()"
                                    required>
                                    <option value="employee">Employee</option>
                                    <option value="manager">Manager</option>
                                </select>
                            </div>
                            <div class="mb-3" id="managerField">
                                <label class="form-label">Manager</label>
                                <select class="form-select" name="manager" id="managerSelect">
                                    <option value="">Select Manager</option>
                                </select>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-primary">Add User</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Add Approval Rule Modal -->
        <div class="modal fade" id="addApprovalRuleModal" tabindex="-1">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title"><i class="fas fa-cogs me-2"></i>Configure Approval Rule</h5>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                    </div>
                    <form id="addApprovalRuleForm" onsubmit="submitApprovalRule(event)">
                        <div class="modal-body">
                            <div class="mb-3">
                                <label class="form-label">Rule Name</label>
                                <input type="text" class="form-control" name="name"
                                    placeholder="e.g., Miscellaneous Expenses" required>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Description</label>
                                <textarea class="form-control" name="description" rows="2"
                                    placeholder="Describe when this rule applies"></textarea>
                            </div>

                            <div class="mb-3">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" name="isManagerApprover"
                                        id="isManagerApprover">
                                    <label class="form-check-label" for="isManagerApprover">
                                        <strong>Require Manager Approval First</strong>
                                        <small class="d-block text-muted">Employee's manager must approve first</small>
                                    </label>
                                </div>
                            </div>

                            <hr>

                            <h6 class="mb-3">Sequential Approvers</h6>
                            <div id="approversContainer">
                                <div class="approver-item mb-2">
                                    <div class="input-group">
                                        <span class="input-group-text">Step 1</span>
                                        <select class="form-select" name="approvers[]">
                                            <option value="">Select Approver</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <button type="button" class="btn btn-sm btn-outline-primary" onclick="addApproverStep()">
                                <i class="fas fa-plus me-1"></i>Add Another Approver
                            </button>

                            <hr>

                            <h6 class="mb-3">Conditional Rules (Optional)</h6>
                            <div class="row">
                                <div class="col-md-6">
                                    <label class="form-label">Percentage Rule</label>
                                    <div class="input-group mb-3">
                                        <input type="number" class="form-control" name="percentageRule" min="1"
                                            max="100" placeholder="60">
                                        <span class="input-group-text">%</span>
                                    </div>
                                    <small class="text-muted">Auto-approve if this % of approvers approve</small>
                                </div>
                                <div class="col-md-6">
                                    <label class="form-label">Specific Approver</label>
                                    <select class="form-select mb-3" name="specificApprover">
                                        <option value="">Select Specific Approver</option>
                                    </select>
                                    <small class="text-muted">Auto-approve if this approver approves</small>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-primary">Save Approval Rule</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- View Expense Modal -->
        <div class="modal fade" id="viewExpenseModal" tabindex="-1">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title"><i class="fas fa-file-invoice me-2"></i>Expense Details</h5>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body" id="expenseDetailsContent">
                        <div class="text-center py-5">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Scripts -->
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>
        <script>
            // Mock data for demonstration
            const mockData = {
                users: [
                    {_id: '1', name: 'John Doe', email: 'john@example.com', role: 'employee', manager: {name: 'Jane Smith'}},
                    {_id: '2', name: 'Jane Smith', email: 'jane@example.com', role: 'manager', manager: null},
                    {_id: '3', name: 'Bob Wilson', email: 'bob@example.com', role: 'admin', manager: null}
                ],
                expenses: [
                    {_id: '1', expenseId: 'EXP001', date: new Date(), employee: {name: 'John Doe'}, category: 'food', description: 'Team lunch', amount: 150, currency: 'USD', amountInCompanyCurrency: 150, status: 'pending'},
                    {_id: '2', expenseId: 'EXP002', date: new Date(), employee: {name: 'Jane Smith'}, category: 'travel', description: 'Flight to NYC', amount: 450, currency: 'USD', amountInCompanyCurrency: 450, status: 'approved'}
                ],
                approvalRules: [
                    {_id: '1', name: 'Standard Approval', description: 'Default approval workflow', isManagerApprover: true, approvers: [{name: 'Jane Smith', role: 'manager'}], conditionalRules: {percentageRule: 60}}
                ]
            };

            // Section Navigation
            function showSection(sectionId) {
                document.querySelectorAll('.section').forEach(section => {
                    section.style.display = 'none';
                });
                document.getElementById(sectionId).style.display = 'block';

                document.querySelectorAll('.nav-link').forEach(link => {
                    link.classList.remove('active');
                });
                event.target.closest('.nav-link').classList.add('active');

                // Load section data
                if (sectionId === 'users') loadUsers();
                if (sectionId === 'expenses') loadExpenses();
                if (sectionId === 'approval-rules') loadApprovalRules();
                if (sectionId === 'reports') initCharts();
            }

            // Modal Functions
            function openModal(modalId) {
                const modal = new bootstrap.Modal(document.getElementById(modalId));
                modal.show();
            }

            // Toggle Manager Field
            function toggleManagerField() {
                const role = document.getElementById('userRole').value;
                const managerField = document.getElementById('managerField');
                managerField.style.display = role === 'employee' ? 'block' : 'none';
            }

            // Add Approver Step
            let approverStepCount = 1;
            function addApproverStep() {
                approverStepCount++;
                const container = document.getElementById('approversContainer');
                const newStep = document.createElement('div');
                newStep.className = 'approver-item mb-2';
                newStep.innerHTML = `
                <div class="input-group">
                    <span class="input-group-text">Step ${approverStepCount}</span>
                    <select class="form-select" name="approvers[]">
                        <option value="">Select Approver</option>
                        ${mockData.users.filter(u => u.role === 'manager' || u.role === 'admin').map(u =>
                    `<option value="${u._id}">${u.name} (${u.role})</option>`
                ).join('')}
                    </select>
                    <button type="button" class="btn btn-outline-danger" onclick="removeApproverStep(this)">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            `;
                container.appendChild(newStep);
            }

            function removeApproverStep(btn) {
                btn.closest('.approver-item').remove();
                renumberSteps();
            }

            function renumberSteps() {
                const steps = document.querySelectorAll('#approversContainer .approver-item');
                steps.forEach((step, index) => {
                    step.querySelector('.input-group-text').textContent = `Step ${index + 1}`;
                });
                approverStepCount = steps.length;
            }

            // Load Users
            function loadUsers() {
                const tbody = document.getElementById('usersTable');
                tbody.innerHTML = mockData.users.map(u => `
                <tr>
                    <td>${u.name}</td>
                    <td>${u.email}</td>
                    <td>
                        <span class="badge bg-${u.role === 'admin' ? 'danger' : u.role === 'manager' ? 'primary' : 'secondary'} badge-custom">
                            ${u.role.toUpperCase()}
                        </span>
                    </td>
                    <td>${u.manager ? u.manager.name : 'N/A'}</td>
                    <td><span class="badge bg-success badge-custom">Active</span></td>
                    <td>
                        <button class="btn btn-sm btn-outline-primary" onclick="editUser('${u._id}')">
                            <i class="fas fa-edit"></i>
                        </button>
                        <button class="btn btn-sm btn-outline-danger" onclick="deleteUser('${u._id}')">
                            <i class="fas fa-trash"></i>
                        </button>
                    </td>
                </tr>
            `).join('');
            }

            // Load Expenses
            function loadExpenses() {
                const tbody = document.getElementById('expensesTableBody');
                tbody.innerHTML = mockData.expenses.map(exp => `
                <tr data-status="${exp.status}" data-category="${exp.category}">
                    <td>#${exp.expenseId}</td>
                    <td>${new Date(exp.date).toLocaleDateString()}</td>
                    <td>${exp.employee.name}</td>
                    <td><span class="badge bg-secondary badge-custom">${exp.category}</span></td>
                    <td>${exp.description}</td>
                    <td>${exp.currency} ${exp.amount.toFixed(2)}</td>
                    <td>
                        <span class="badge bg-${exp.status === 'approved' ? 'success' : exp.status === 'rejected' ? 'danger' : 'warning'} badge-custom">
                            ${exp.status.charAt(0).toUpperCase() + exp.status.slice(1)}
                        </span>
                    </td>
                    <td>
                        <button class="btn btn-sm btn-outline-primary" onclick="viewExpense('${exp._id}')">
                            <i class="fas fa-eye"></i>
                        </button>
                        ${exp.status === 'pending' ? `
                            <button class="btn btn-sm btn-outline-danger" onclick="overrideExpense('${exp._id}', 'rejected')">
                                <i class="fas fa-times"></i>
                            </button>
                            <button class="btn btn-sm btn-outline-success" onclick="overrideExpense('${exp._id}', 'approved')">
                                <i class="fas fa-check"></i>
                            </button>
                        ` : ''}
                    </td>
                </tr>
            `).join('');
            }

            // Load Approval Rules
            function loadApprovalRules() {
                const container = document.getElementById('approvalRulesContainer');
                if (mockData.approvalRules.length === 0) {
                    container.innerHTML = `
                    <div class="text-center text-muted py-5">
                        <i class="fas fa-cogs fa-3x mb-3" style="opacity: 0.3;"></i>
                        <p>No approval rules configured yet. Click "Add Rule" to create one.</p>
                    </div>
                `;
                    return;
                }

                container.innerHTML = mockData.approvalRules.map(rule => `
                <div class="approval-rule-item">
                    <div class="d-flex justify-content-between align-items-start mb-3">
                        <div>
                            <h5 class="mb-1">${rule.name}</h5>
                            <p class="text-muted mb-2">${rule.description || 'No description'}</p>
                        </div>
                        <div>
                            <button class="btn btn-sm btn-outline-primary me-2" onclick="editApprovalRule('${rule._id}')">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button class="btn btn-sm btn-outline-danger" onclick="deleteApprovalRule('${rule._id}')">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </div>
                    ${rule.isManagerApprover ? '<div class="mb-2"><span class="badge bg-info">Manager Approval Required</span></div>' : ''}
                    ${rule.approvers && rule.approvers.length > 0 ? `
                        <div class="mb-3">
                            <strong>Sequential Approvers:</strong>
                            <div class="approver-sequence mt-2">
                                ${rule.approvers.map((approver, idx) => `
                                    <div class="approver-step">
                                        <small class="text-muted">Step ${idx + 1}</small>
                                        <div><strong>${approver.name}</strong></div>
                                        <small>${approver.role}</small>
                                    </div>
                                    ${idx < rule.approvers.length - 1 ? '<i class="fas fa-arrow-right text-muted"></i>' : ''}
                                `).join('')}
                            </div>
                        </div>
                    ` : ''}
                    ${rule.conditionalRules && (rule.conditionalRules.percentageRule || rule.conditionalRules.specificApprover) ? `
                        <div>
                            <strong>Conditional Rules:</strong>
                            <ul class="mt-2 mb-0">
                                ${rule.conditionalRules.percentageRule ? `<li><strong>Percentage Rule:</strong> Approve if ${rule.conditionalRules.percentageRule}% of approvers approve</li>` : ''}
                                ${rule.conditionalRules.specificApprover ? `<li><strong>Specific Approver:</strong> Auto-approve if ${rule.conditionalRules.specificApprover.name} approves</li>` : ''}
                            </ul>
                        </div>
                    ` : ''}
                </div>
            `).join('');
            }

            // Load Recent Expenses (Dashboard)
            function loadRecentExpenses() {
                const tbody = document.getElementById('recentExpensesTable');
                const recent = mockData.expenses.slice(0, 5);
                if (recent.length === 0) {
                    tbody.innerHTML = '<tr><td colspan="6" class="text-center text-muted">No recent expenses</td></tr>';
                    return;
                }
                tbody.innerHTML = recent.map(exp => `
                <tr>
                    <td>${new Date(exp.date).toLocaleDateString()}</td>
                    <td>${exp.employee.name}</td>
                    <td>${exp.description}</td>
                    <td>${exp.currency} ${exp.amountInCompanyCurrency.toFixed(2)}</td>
                    <td>
                        <span class="badge bg-${exp.status === 'approved' ? 'success' : exp.status === 'rejected' ? 'danger' : 'warning'} badge-custom">
                            ${exp.status.charAt(0).toUpperCase() + exp.status.slice(1)}
                        </span>
                    </td>
                    <td>
                        <button class="btn btn-sm btn-outline-primary" onclick="viewExpense('${exp._id}')">
                            <i class="fas fa-eye"></i>
                        </button>
                    </td>
                </tr>
            `).join('');
            }

            // Submit Add User
            async function submitAddUser(event) {
                event.preventDefault();
                const formData = new FormData(event.target);
                const data = Object.fromEntries(formData);

                // Mock implementation
                console.log('Adding user:', data);
                alert('User added successfully! (Mock implementation)');
                bootstrap.Modal.getInstance(document.getElementById('addUserModal')).hide();
                event.target.reset();
            }

            // Submit Approval Rule
            async function submitApprovalRule(event) {
                event.preventDefault();
                const formData = new FormData(event.target);

                const data = {
                    name: formData.get('name'),
                    description: formData.get('description'),
                    isManagerApprover: formData.get('isManagerApprover') === 'on',
                    approvers: formData.getAll('approvers[]').filter(a => a),
                    conditionalRules: {}
                };

                if (formData.get('percentageRule')) {
                    data.conditionalRules.percentageRule = parseInt(formData.get('percentageRule'));
                }
                if (formData.get('specificApprover')) {
                    data.conditionalRules.specificApprover = formData.get('specificApprover');
                }

                console.log('Creating approval rule:', data);
                alert('Approval rule created successfully! (Mock implementation)');
                bootstrap.Modal.getInstance(document.getElementById('addApprovalRuleModal')).hide();
                event.target.reset();
            }

            // View Expense
            function viewExpense(expenseId) {
                const modal = new bootstrap.Modal(document.getElementById('viewExpenseModal'));
                modal.show();

                const expense = mockData.expenses.find(e => e._id === expenseId);
                if (!expense) {
                    document.getElementById('expenseDetailsContent').innerHTML = '<div class="alert alert-danger">Expense not found</div>';
                    return;
                }

                document.getElementById('expenseDetailsContent').innerHTML = `
                <div class="row">
                    <div class="col-md-6">
                        <h6>Basic Information</h6>
                        <table class="table table-sm">
                            <tr><td><strong>Employee:</strong></td><td>${expense.employee.name}</td></tr>
                            <tr><td><strong>Date:</strong></td><td>${new Date(expense.date).toLocaleDateString()}</td></tr>
                            <tr><td><strong>Category:</strong></td><td><span class="badge bg-secondary">${expense.category}</span></td></tr>
                            <tr><td><strong>Description:</strong></td><td>${expense.description}</td></tr>
                        </table>
                    </div>
                    <div class="col-md-6">
                        <h6>Financial Details</h6>
                        <table class="table table-sm">
                            <tr><td><strong>Amount:</strong></td><td>${expense.currency} ${expense.amount.toFixed(2)}</td></tr>
                            <tr><td><strong>In Company Currency:</strong></td><td>USD ${expense.amountInCompanyCurrency.toFixed(2)}</td></tr>
                            <tr><td><strong>Status:</strong></td><td>
                                <span class="badge bg-${expense.status === 'approved' ? 'success' : expense.status === 'rejected' ? 'danger' : 'warning'}">
                                    ${expense.status.charAt(0).toUpperCase() + expense.status.slice(1)}
                                </span>
                            </td></tr>
                        </table>
                    </div>
                </div>
            `;
            }

            // Edit, Delete User
            function editUser(userId) {
                alert('Edit user functionality (Mock implementation)');
            }

            function deleteUser(userId) {
                if (!confirm('Are you sure you want to delete this user?')) return;
                alert('User deleted successfully! (Mock implementation)');
            }

            // Delete Approval Rule
            function deleteApprovalRule(ruleId) {
                if (!confirm('Are you sure you want to delete this approval rule?')) return;
                alert('Approval rule deleted successfully! (Mock implementation)');
            }

            // Edit Approval Rule
            function editApprovalRule(ruleId) {
                alert('Edit approval rule functionality (Mock implementation)');
            }

            // Override Expense
            function overrideExpense(expenseId, status) {
                const action = status === 'approved' ? 'approve' : 'reject';
                if (!confirm(`Are you sure you want to ${action} this expense?`)) return;
                alert(`Expense ${status} successfully! (Mock implementation)`);
            }

            // Filter Expenses
            function filterExpenses() {
                const statusFilter = document.getElementById('statusFilter').value;
                const categoryFilter = document.getElementById('categoryFilter').value;
                const searchText = document.getElementById('searchExpense').value.toLowerCase();

                const rows = document.querySelectorAll('#expensesTableBody tr');

                rows.forEach(row => {
                    const status = row.getAttribute('data-status');
                    const category = row.getAttribute('data-category');
                    const text = row.textContent.toLowerCase();

                    let show = true;
                    if (statusFilter && status !== statusFilter) show = false;
                    if (categoryFilter && category !== categoryFilter) show = false;
                    if (searchText && !text.includes(searchText)) show = false;

                    row.style.display = show ? '' : 'none';
                });
            }

            // Export Report
            function exportReport(format) {
                const startDate = document.getElementById('exportStartDate').value;
                const endDate = document.getElementById('exportEndDate').value;

                if (!startDate || !endDate) {
                    alert('Please select both start and end dates');
                    return;
                }

                alert(`Exporting report as ${format.toUpperCase()}... (Mock implementation)`);
            }

            // Initialize Charts
            let categoryChart = null;
            let trendChart = null;

            function initCharts() {
                // Category Chart
                const categoryCtx = document.getElementById('categoryChart');
                if (categoryCtx && !categoryChart) {
                    categoryChart = new Chart(categoryCtx, {
                        type: 'doughnut',
                        data: {
                            labels: ['Food', 'Travel', 'Accommodation', 'Supplies', 'Other'],
                            datasets: [{
                                data: [5000, 12000, 8000, 3000, 2000],
                                backgroundColor: ['#3498db', '#2ecc71', '#f39c12', '#e74c3c', '#9b59b6']
                            }]
                        },
                        options: {
                            responsive: true,
                            plugins: {
                                legend: {position: 'bottom'}
                            }
                        }
                    });
                }

                // Trend Chart
                const trendCtx = document.getElementById('trendChart');
                if (trendCtx && !trendChart) {
                    trendChart = new Chart(trendCtx, {
                        type: 'line',
                        data: {
                            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],
                            datasets: [{
                                label: 'Expenses',
                                data: [12000, 15000, 13000, 18000, 16000, 20000],
                                borderColor: '#3498db',
                                backgroundColor: 'rgba(52, 152, 219, 0.1)',
                                tension: 0.4,
                                fill: true
                            }]
                        },
                        options: {
                            responsive: true,
                            plugins: {legend: {display: false}},
                            scales: {y: {beginAtZero: true}}
                        }
                    });
                }
            }

            // Populate dropdowns with managers
            function populateManagerDropdowns() {
                const managers = mockData.users.filter(u => u.role === 'manager' || u.role === 'admin');
                const selects = ['managerSelect', 'specificApprover'].concat(
                    Array.from(document.querySelectorAll('[name="approvers[]"]')).map((_, i) => `approvers[${i}]`)
                );

                managers.forEach(manager => {
                    document.querySelectorAll('#managerSelect, select[name="specificApprover"], select[name="approvers[]"]').forEach(select => {
                        if (!Array.from(select.options).some(opt => opt.value === manager._id)) {
                            const option = new Option(`${manager.name} (${manager.role})`, manager._id);
                            select.add(option);
                        }
                    });
                });
            }

            // Initialize on page load
            window.addEventListener('DOMContentLoaded', () => {
                loadRecentExpenses();
                populateManagerDropdowns();
                toggleManagerField();
            });
        </script>
    </body>

</html>