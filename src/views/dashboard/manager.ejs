<!DOCTYPE html>
<html lang="en">

    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Manager's View - Expense Management</title>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
        <style>
            :root {
                --primary-color: #2c3e50;
                --secondary-color: #3498db;
                --success-color: #27ae60;
                --danger-color: #e74c3c;
                --warning-color: #f39c12;
            }

            body {
                background-color: #ecf0f1;
                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            }

            .sidebar {
                min-height: 100vh;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
                padding: 20px 0;
                position: fixed;
                width: 250px;
                box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1);
            }

            .sidebar .nav-link {
                color: rgba(255, 255, 255, 0.8);
                padding: 12px 25px;
                margin: 5px 10px;
                border-radius: 8px;
                transition: all 0.3s;
            }

            .sidebar .nav-link:hover,
            .sidebar .nav-link.active {
                background-color: rgba(255, 255, 255, 0.2);
                color: white;
            }

            .main-content {
                margin-left: 250px;
                padding: 30px;
            }

            .header {
                background: white;
                padding: 20px 30px;
                border-radius: 10px;
                box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
                margin-bottom: 30px;
            }

            .stat-card {
                background: white;
                border-radius: 10px;
                padding: 25px;
                box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
                transition: transform 0.3s;
            }

            .stat-card:hover {
                transform: translateY(-5px);
            }

            .stat-card .icon {
                font-size: 2.5rem;
                opacity: 0.8;
            }

            .card-custom {
                border: none;
                border-radius: 10px;
                box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
                margin-bottom: 30px;
            }

            .card-custom .card-header {
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
                border-radius: 10px 10px 0 0 !important;
                padding: 15px 20px;
                font-weight: 600;
            }

            .table-custom {
                background: white;
            }

            .table-custom thead {
                background-color: #f8f9fa;
                font-weight: 600;
            }

            .table-custom tbody tr {
                transition: background-color 0.2s;
            }

            .table-custom tbody tr:hover {
                background-color: #f8f9fa;
            }

            .badge-custom {
                padding: 6px 12px;
                border-radius: 20px;
                font-weight: 500;
            }

            .btn-custom {
                border-radius: 8px;
                padding: 8px 20px;
                font-weight: 500;
                transition: all 0.3s;
            }

            .logo-container {
                text-align: center;
                padding: 20px;
                margin-bottom: 30px;
            }

            .logo-container h3 {
                color: white;
                font-weight: 700;
                margin-bottom: 5px;
            }

            .logo-container small {
                color: rgba(255, 255, 255, 0.8);
            }

            .action-buttons {
                display: flex;
                gap: 5px;
            }

            .modal-content {
                border-radius: 15px;
                border: none;
            }

            .modal-header {
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
                border-radius: 15px 15px 0 0;
            }

            .expense-detail-row {
                padding: 8px 0;
                border-bottom: 1px solid #eee;
            }

            .expense-detail-row:last-child {
                border-bottom: none;
            }

            .receipt-preview {
                max-width: 100%;
                max-height: 400px;
                border-radius: 8px;
                box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            }

            .approval-history-item {
                padding: 10px;
                background: #f8f9fa;
                border-radius: 8px;
                margin-bottom: 10px;
                border-left: 3px solid #667eea;
            }

            .filter-section {
                background: white;
                padding: 20px;
                border-radius: 10px;
                margin-bottom: 20px;
                box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            }

            .empty-state {
                text-align: center;
                padding: 60px 20px;
                color: #6c757d;
            }

            .empty-state i {
                font-size: 4rem;
                opacity: 0.3;
                margin-bottom: 20px;
            }
        </style>
    </head>

    <body>
        <!-- Sidebar -->
        <div class="sidebar">
            <div class="logo-container">
                <i class="fas fa-receipt fa-3x mb-2"></i>
                <h3>ExpenseFlow</h3>
                <small>Manager Panel</small>
            </div>

            <nav class="nav flex-column">
                <a class="nav-link active" href="#" onclick="showSection('approvals'); return false;">
                    <i class="fas fa-clipboard-check me-2"></i> Approvals to Review
                </a>
                <a class="nav-link" href="#" onclick="showSection('approved'); return false;">
                    <i class="fas fa-check-circle me-2"></i> Approved
                </a>
                <a class="nav-link" href="#" onclick="showSection('rejected'); return false;">
                    <i class="fas fa-times-circle me-2"></i> Rejected
                </a>
                <a class="nav-link" href="#" onclick="showSection('team'); return false;">
                    <i class="fas fa-users me-2"></i> My Team
                </a>
                <a class="nav-link" href="#" onclick="showSection('reports'); return false;">
                    <i class="fas fa-chart-bar me-2"></i> Reports
                </a>
                <hr style="border-color: rgba(255,255,255,0.2);">
                <a class="nav-link" href="/logout">
                    <i class="fas fa-sign-out-alt me-2"></i> Logout
                </a>
            </nav>
        </div>

        <!-- Main Content -->
        <div class="main-content">
            <!-- Header -->
            <div class="header d-flex justify-content-between align-items-center">
                <div>
                    <h2 class="mb-1">Manager's View</h2>
                    <p class="text-muted mb-0">
                        <i class="fas fa-user me-2"></i>
                        <%= typeof user !=='undefined' ? user.name : 'Manager Name' %>
                            <span class="badge bg-primary ms-2">Manager</span>
                    </p>
                </div>
                <div>
                    <span class="badge bg-warning badge-custom" style="font-size: 1rem;">
                        <i class="fas fa-clock me-2"></i>
                        <span id="pendingCount">
                            <%= typeof pendingCount !=='undefined' ? pendingCount : 0 %>
                        </span> Pending Approvals
                    </span>
                </div>
            </div>

            <!-- Stats Cards -->
            <div class="row mb-4">
                <div class="col-md-3">
                    <div class="stat-card">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <p class="text-muted mb-1">Pending Review</p>
                                <h3 class="mb-0" id="statPending">
                                    <%= typeof stats !=='undefined' ? stats.pending : 0 %>
                                </h3>
                            </div>
                            <div class="icon text-warning">
                                <i class="fas fa-clock"></i>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="stat-card">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <p class="text-muted mb-1">Approved</p>
                                <h3 class="mb-0" id="statApproved">
                                    <%= typeof stats !=='undefined' ? stats.approved : 0 %>
                                </h3>
                            </div>
                            <div class="icon text-success">
                                <i class="fas fa-check-circle"></i>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="stat-card">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <p class="text-muted mb-1">Rejected</p>
                                <h3 class="mb-0" id="statRejected">
                                    <%= typeof stats !=='undefined' ? stats.rejected : 0 %>
                                </h3>
                            </div>
                            <div class="icon text-danger">
                                <i class="fas fa-times-circle"></i>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="stat-card">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <p class="text-muted mb-1">Team Size</p>
                                <h3 class="mb-0" id="statTeam">
                                    <%= typeof stats !=='undefined' ? stats.teamSize : 0 %>
                                </h3>
                            </div>
                            <div class="icon text-info">
                                <i class="fas fa-users"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Approvals to Review Section -->
            <div id="approvals" class="section">
                <div class="card card-custom">
                    <div class="card-header">
                        <i class="fas fa-clipboard-check me-2"></i>Approvals to Review
                    </div>
                    <div class="card-body">
                        <!-- Filters -->
                        <div class="filter-section">
                            <div class="row">
                                <div class="col-md-4">
                                    <label class="form-label">Filter by Employee</label>
                                    <select class="form-select" id="employeeFilter" onchange="filterExpenses()">
                                        <option value="">All Employees</option>
                                    </select>
                                </div>
                                <div class="col-md-4">
                                    <label class="form-label">Filter by Category</label>
                                    <select class="form-select" id="categoryFilter" onchange="filterExpenses()">
                                        <option value="">All Categories</option>
                                        <option value="food">Food</option>
                                        <option value="travel">Travel</option>
                                        <option value="accommodation">Accommodation</option>
                                        <option value="supplies">Supplies</option>
                                        <option value="other">Other</option>
                                    </select>
                                </div>
                                <div class="col-md-4">
                                    <label class="form-label">Search</label>
                                    <input type="text" class="form-control" id="searchFilter" placeholder="Search..."
                                        onkeyup="filterExpenses()">
                                </div>
                            </div>
                        </div>

                        <div class="table-responsive">
                            <table class="table table-custom table-hover">
                                <thead>
                                    <tr>
                                        <th>Approval Subject</th>
                                        <th>Request Owner</th>
                                        <th>Category</th>
                                        <th>Request Status</th>
                                        <th>Total Amount<br><small>(in company's currency)</small></th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="approvalsTable">
                                    <% if(typeof pendingExpenses !=='undefined' && pendingExpenses.length> 0) { %>
                                        <% pendingExpenses.forEach(expense=> { %>
                                            <tr data-employee="<%= expense.employee._id %>"
                                                data-category="<%= expense.category %>">
                                                <td>
                                                    <%= expense.description %>
                                                </td>
                                                <td>
                                                    <%= expense.employee.name %>
                                                </td>
                                                <td>
                                                    <span class="badge bg-secondary badge-custom">
                                                        <%= expense.category %>
                                                    </span>
                                                </td>
                                                <td>
                                                    <span class="badge bg-warning badge-custom">
                                                        Pending
                                                    </span>
                                                </td>
                                                <td>
                                                    <%= typeof company !=='undefined' ? company.currency : 'USD' %>
                                                        <%= expense.amountInCompanyCurrency.toFixed(2) %>
                                                </td>
                                                <td>
                                                    <div class="action-buttons">
                                                        <button class="btn btn-sm btn-success"
                                                            onclick="handleApproval('<%= expense._id %>', 'approved')"
                                                            title="Approve">
                                                            <i class="fas fa-check"></i>
                                                        </button>
                                                        <button class="btn btn-sm btn-danger"
                                                            onclick="handleApproval('<%= expense._id %>', 'rejected')"
                                                            title="Reject">
                                                            <i class="fas fa-times"></i>
                                                        </button>
                                                        <button class="btn btn-sm btn-info"
                                                            onclick="viewExpenseDetails('<%= expense._id %>')"
                                                            title="View Details">
                                                            <i class="fas fa-eye"></i>
                                                        </button>
                                                    </div>
                                                </td>
                                            </tr>
                                            <% }); %>
                                                <% } else { %>
                                                    <tr>
                                                        <td colspan="6">
                                                            <div class="empty-state">
                                                                <i class="fas fa-clipboard-check"></i>
                                                                <p class="mb-0">No pending approvals at this time</p>
                                                            </div>
                                                        </td>
                                                    </tr>
                                                    <% } %>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Approved Section -->
            <div id="approved" class="section" style="display: none;">
                <div class="card card-custom">
                    <div class="card-header">
                        <i class="fas fa-check-circle me-2"></i>Approved Expenses
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-custom table-hover">
                                <thead>
                                    <tr>
                                        <th>Date</th>
                                        <th>Employee</th>
                                        <th>Description</th>
                                        <th>Category</th>
                                        <th>Amount</th>
                                        <th>Approved On</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="approvedTable">
                                    <tr>
                                        <td colspan="7">
                                            <div class="empty-state">
                                                <i class="fas fa-check-circle"></i>
                                                <p class="mb-0">No approved expenses</p>
                                            </div>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Rejected Section -->
            <div id="rejected" class="section" style="display: none;">
                <div class="card card-custom">
                    <div class="card-header">
                        <i class="fas fa-times-circle me-2"></i>Rejected Expenses
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-custom table-hover">
                                <thead>
                                    <tr>
                                        <th>Date</th>
                                        <th>Employee</th>
                                        <th>Description</th>
                                        <th>Category</th>
                                        <th>Amount</th>
                                        <th>Rejected On</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="rejectedTable">
                                    <tr>
                                        <td colspan="7">
                                            <div class="empty-state">
                                                <i class="fas fa-times-circle"></i>
                                                <p class="mb-0">No rejected expenses</p>
                                            </div>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <!-- My Team Section -->
            <div id="team" class="section" style="display: none;">
                <div class="card card-custom">
                    <div class="card-header">
                        <i class="fas fa-users me-2"></i>My Team Members
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-custom table-hover">
                                <thead>
                                    <tr>
                                        <th>Name</th>
                                        <th>Email</th>
                                        <th>Total Expenses</th>
                                        <th>Pending</th>
                                        <th>Approved</th>
                                        <th>Rejected</th>
                                    </tr>
                                </thead>
                                <tbody id="teamTable">
                                    <tr>
                                        <td colspan="6">
                                            <div class="empty-state">
                                                <i class="fas fa-users"></i>
                                                <p class="mb-0">No team members found</p>
                                            </div>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Reports Section -->
            <div id="reports" class="section" style="display: none;">
                <div class="card card-custom">
                    <div class="card-header">
                        <i class="fas fa-chart-bar me-2"></i>Team Expense Reports
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <canvas id="teamExpenseChart"></canvas>
                            </div>
                            <div class="col-md-6">
                                <canvas id="categoryBreakdownChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Expense Details Modal -->
        <div class="modal fade" id="expenseDetailsModal" tabindex="-1">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title"><i class="fas fa-file-invoice me-2"></i>Expense Details</h5>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body" id="expenseDetailsContent">
                        <div class="text-center py-5">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-danger" id="modalRejectBtn">
                            <i class="fas fa-times me-2"></i>Reject
                        </button>
                        <button type="button" class="btn btn-success" id="modalApproveBtn">
                            <i class="fas fa-check me-2"></i>Approve
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Approval/Rejection Comment Modal -->
        <div class="modal fade" id="commentModal" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="commentModalTitle">Add Comment</h5>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                    </div>
                    <form id="commentForm">
                        <div class="modal-body">
                            <input type="hidden" id="commentExpenseId">
                            <input type="hidden" id="commentAction">
                            <div class="mb-3">
                                <label class="form-label">Comments (Optional)</label>
                                <textarea class="form-control" id="commentText" rows="4"
                                    placeholder="Add any comments or notes..."></textarea>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-primary" id="submitCommentBtn">Submit</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Scripts -->
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>
        <script>
            // Section Navigation
            function showSection(sectionId) {
                document.querySelectorAll('.section').forEach(section => {
                    section.style.display = 'none';
                });
                document.getElementById(sectionId).style.display = 'block';

                document.querySelectorAll('.nav-link').forEach(link => {
                    link.classList.remove('active');
                });
                event.target.closest('.nav-link').classList.add('active');

                // Load section-specific data
                if (sectionId === 'approved') loadApprovedExpenses();
                if (sectionId === 'rejected') loadRejectedExpenses();
                if (sectionId === 'team') loadTeamMembers();
                if (sectionId === 'reports') initCharts();
            }

            // Handle Approval/Rejection
            function handleApproval(expenseId, action) {
                const modal = new bootstrap.Modal(document.getElementById('commentModal'));
                document.getElementById('commentExpenseId').value = expenseId;
                document.getElementById('commentAction').value = action;
                document.getElementById('commentModalTitle').textContent =
                    action === 'approved' ? 'Approve Expense' : 'Reject Expense';
                document.getElementById('submitCommentBtn').className =
                    action === 'approved' ? 'btn btn-success' : 'btn btn-danger';
                modal.show();
            }

            // Submit Approval/Rejection
            document.getElementById('commentForm').addEventListener('submit', async function (e) {
                e.preventDefault();

                const expenseId = document.getElementById('commentExpenseId').value;
                const action = document.getElementById('commentAction').value;
                const comments = document.getElementById('commentText').value;

                try {
                    const response = await fetch(`/manager/expenses/${expenseId}/${action}`, {
                        method: 'POST',
                        headers: {'Content-Type': 'application/json'},
                        body: JSON.stringify({comments})
                    });

                    if (response.ok) {
                        alert(`Expense ${action} successfully!`);
                        bootstrap.Modal.getInstance(document.getElementById('commentModal')).hide();
                        location.reload();
                    } else {
                        const error = await response.json();
                        alert('Error: ' + (error.message || `Failed to ${action} expense`));
                    }
                } catch (error) {
                    alert('Error: ' + error.message);
                }
            });

            // View Expense Details
            async function viewExpenseDetails(expenseId) {
                const modal = new bootstrap.Modal(document.getElementById('expenseDetailsModal'));
                modal.show();

                try {
                    const response = await fetch(`/manager/expenses/${expenseId}`);
                    const expense = await response.json();

                    document.getElementById('expenseDetailsContent').innerHTML = `
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div class="expense-detail-row">
                                <strong>Employee:</strong> ${expense.employee.name}
                            </div>
                            <div class="expense-detail-row">
                                <strong>Date:</strong> ${new Date(expense.date).toLocaleDateString()}
                            </div>
                            <div class="expense-detail-row">
                                <strong>Category:</strong> 
                                <span class="badge bg-secondary">${expense.category}</span>
                            </div>
                            <div class="expense-detail-row">
                                <strong>Description:</strong> ${expense.description}
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="expense-detail-row">
                                <strong>Amount:</strong> ${expense.currency} ${expense.amount.toFixed(2)}
                            </div>
                            <div class="expense-detail-row">
                                <strong>Company Currency:</strong> USD ${expense.amountInCompanyCurrency.toFixed(2)}
                            </div>
                            <div class="expense-detail-row">
                                <strong>Status:</strong>
                                <span class="badge bg-${expense.status === 'approved' ? 'success' : expense.status === 'rejected' ? 'danger' : 'warning'}">
                                    ${expense.status.charAt(0).toUpperCase() + expense.status.slice(1)}
                                </span>
                            </div>
                        </div>
                    </div>
                    ${expense.receipt ? `
                        <div class="mb-3">
                            <strong>Receipt:</strong>
                            <div class="mt-2">
                                <img src="${expense.receipt}" class="receipt-preview" alt="Receipt">
                            </div>
                        </div>
                    ` : ''}
                    ${expense.approvalHistory && expense.approvalHistory.length > 0 ? `
                        <div>
                            <strong>Approval History:</strong>
                            ${expense.approvalHistory.map(h => `
                                <div class="approval-history-item mt-2">
                                    <strong>${h.approver.name}</strong>
                                    <span class="badge bg-${h.status === 'approved' ? 'success' : 'danger'} ms-2">
                                        ${h.status.charAt(0).toUpperCase() + h.status.slice(1)}
                                    </span>
                                    <br>
                                    <small class="text-muted">${new Date(h.date).toLocaleString()}</small>
                                    ${h.comments ? `<br><em>"${h.comments}"</em>` : ''}
                                </div>
                            `).join('')}
                        </div>
                    ` : ''}
                `;

                    // Set up modal action buttons
                    document.getElementById('modalApproveBtn').onclick = () => {
                        bootstrap.Modal.getInstance(document.getElementById('expenseDetailsModal')).hide();
                        handleApproval(expenseId, 'approved');
                    };
                    document.getElementById('modalRejectBtn').onclick = () => {
                        bootstrap.Modal.getInstance(document.getElementById('expenseDetailsModal')).hide();
                        handleApproval(expenseId, 'rejected');
                    };

                } catch (error) {
                    document.getElementById('expenseDetailsContent').innerHTML =
                        `<div class="alert alert-danger">Error loading expense details: ${error.message}</div>`;
                }
            }

            // Filter Expenses
            function filterExpenses() {
                const employeeFilter = document.getElementById('employeeFilter').value;
                const categoryFilter = document.getElementById('categoryFilter').value;
                const searchText = document.getElementById('searchFilter').value.toLowerCase();

                const rows = document.querySelectorAll('#approvalsTable tr[data-employee]');

                rows.forEach(row => {
                    const employee = row.getAttribute('data-employee');
                    const category = row.getAttribute('data-category');
                    const text = row.textContent.toLowerCase();

                    let show = true;
                    if (employeeFilter && employee !== employeeFilter) show = false;
                    if (categoryFilter && category !== categoryFilter) show = false;
                    if (searchText && !text.includes(searchText)) show = false;

                    row.style.display = show ? '' : 'none';
                });
            }

            // Load Approved Expenses
            async function loadApprovedExpenses() {
                try {
                    const response = await fetch('/manager/expenses?status=approved');
                    const expenses = await response.json();

                    const tbody = document.getElementById('approvedTable');
                    if (expenses.length === 0) {
                        tbody.innerHTML = `
                        <tr>
                            <td colspan="7">
                                <div class="empty-state">
                                    <i class="fas fa-check-circle"></i>
                                    <p class="mb-0">No approved expenses</p>
                                </div>
                            </td>
                        </tr>
                    `;
                        return;
                    }

                    tbody.innerHTML = expenses.map(exp => `
                    <tr>
                        <td>${new Date(exp.date).toLocaleDateString()}</td>
                        <td>${exp.employee.name}</td>
                        <td>${exp.description}</td>
                        <td><span class="badge bg-secondary badge-custom">${exp.category}</span></td>
                        <td>${exp.currency} ${exp.amount.toFixed(2)}</td>
                        <td>${exp.approvedDate ? new Date(exp.approvedDate).toLocaleDateString() : 'N/A'}</td>
                        <td>
                            <button class="btn btn-sm btn-info" onclick="viewExpenseDetails('${exp._id}')">
                                <i class="fas fa-eye"></i>
                            </button>
                        </td>
                    </tr>
                `).join('');
                } catch (error) {
                    console.error('Error loading approved expenses:', error);
                }
            }

            // Load Rejected Expenses
            async function loadRejectedExpenses() {
                try {
                    const response = await fetch('/manager/expenses?status=rejected');
                    const expenses = await response.json();

                    const tbody = document.getElementById('rejectedTable');
                    if (expenses.length === 0) {
                        tbody.innerHTML = `
                        <tr>
                            <td colspan="7">
                                <div class="empty-state">
                                    <i class="fas fa-times-circle"></i>
                                    <p class="mb-0">No rejected expenses</p>
                                </div>
                            </td>
                        </tr>
                    `;
                        return;
                    }

                    tbody.innerHTML = expenses.map(exp => `
                    <tr>
                        <td>${new Date(exp.date).toLocaleDateString()}</td>
                        <td>${exp.employee.name}</td>
                        <td>${exp.description}</td>
                        <td><span class="badge bg-secondary badge-custom">${exp.category}</span></td>
                        <td>${exp.currency} ${exp.amount.toFixed(2)}</td>
                        <td>${exp.rejectedDate ? new Date(exp.rejectedDate).toLocaleDateString() : 'N/A'}</td>
                        <td>
                            <button class="btn btn-sm btn-info" onclick="viewExpenseDetails('${exp._id}')">
                                <i class="fas fa-eye"></i>
                            </button>
                        </td>
                    </tr>
                `).join('');
                } catch (error) {
                    console.error('Error loading rejected expenses:', error);
                }
            }

            // Load Team Members
            async function loadTeamMembers() {
                try {
                    const response = await fetch('/manager/team');
                    const teamMembers = await response.json();

                    const tbody = document.getElementById('teamTable');
                    if (teamMembers.length === 0) {
                        tbody.innerHTML = `
                        <tr>
                            <td colspan="6">
                                <div class="empty-state">
                                    <i class="fas fa-users"></i>
                                    <p class="mb-0">No team members found</p>
                                </div>
                            </td>
                        </tr>
                    `;
                        return;
                    }

                    tbody.innerHTML = teamMembers.map(member => `
                    <tr>
                        <td>${member.name}</td>
                        <td>${member.email}</td>
                        <td>${member.stats.total}</td>
                        <td><span class="badge bg-warning">${member.stats.pending}</span></td>
                        <td><span class="badge bg-success">${member.stats.approved}</span></td>
                        <td><span class="badge bg-danger">${member.stats.rejected}</span></td>
                    </tr>
                `).join('');
                } catch (error) {
                    console.error('Error loading team members:', error);
                }
            }

            // Initialize Charts
            let teamExpenseChart = null;
            let categoryBreakdownChart = null;

            async function initCharts() {
                try {
                    const response = await fetch('/manager/reports');
                    const data = await response.json();

                    // Team Expense Chart
                    const teamCtx = document.getElementById('teamExpenseChart');
                    if (teamCtx && !teamExpenseChart) {
                        teamExpenseChart = new Chart(teamCtx, {
                            type: 'bar',
                            data: {
                                labels: data.teamMembers || [],
                                datasets: [{
                                    label: 'Total Expenses',
                                    data: data.teamExpenses || [],
                                    backgroundColor: '#667eea'
                                }]
                            },
                            options: {
                                responsive: true,
                                plugins: {
                                    title: {
                                        display: true,
                                        text: 'Expenses by Team Member'
                                    }
                                },
                                scales: {
                                    y: {
                                        beginAtZero: true
                                    }
                                }
                            }
                        });
                    }

                    // Category Breakdown Chart
                    const categoryCtx = document.getElementById('categoryBreakdownChart');
                    if (categoryCtx && !categoryBreakdownChart) {
                        categoryBreakdownChart = new Chart(categoryCtx, {
                            type: 'pie',
                            data: {
                                labels: data.categories || ['Food', 'Travel', 'Accommodation', 'Supplies', 'Other'],
                                datasets: [{
                                    data: data.categoryAmounts || [5000, 12000, 8000, 3000, 2000],
                                    backgroundColor: [
                                        '#3498db',
                                        '#2ecc71',
                                        '#f39c12',
                                        '#e74c3c',
                                        '#9b59b6'
                                    ]
                                }]
                            },
                            options: {
                                responsive: true,
                                plugins: {
                                    title: {
                                        display: true,
                                        text: 'Expenses by Category'
                                    },
                                    legend: {
                                        position: 'bottom'
                                    }
                                }
                            }
                        });
                    }
                } catch (error) {
                    console.error('Error loading chart data:', error);
                }
            }

            // Populate Employee Filter
            async function populateEmployeeFilter() {
                try {
                    const response = await fetch('/manager/team');
                    const teamMembers = await response.json();

                    const select = document.getElementById('employeeFilter');
                    teamMembers.forEach(member => {
                        const option = document.createElement('option');
                        option.value = member._id;
                        option.textContent = member.name;
                        select.appendChild(option);
                    });
                } catch (error) {
                    console.error('Error populating employee filter:', error);
                }
            }

            // Initialize on page load
            window.addEventListener('DOMContentLoaded', () => {
                populateEmployeeFilter();
            });
        </script>
    </body>

</html>